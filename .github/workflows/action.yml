name: Download Workflow

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'URL, magnet, torrent link, or .txt file URL to download'
        required: true
      compress:
        description: 'Compress applicable files (e.g., videos to 480p, images, audio)'
        type: boolean
        default: false
      archive:
        description: 'Archive each file individually with maximum compression'
        type: boolean
        default: false

jobs:
  download:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget curl aria2 ffmpeg p7zip-full chromium-chromedriver

    - name: Install Python dependencies
      run: |
        pip install selenium requests pillow beautifulsoup4 python-magic

    - name: Run download script
      run: python download.py "${{ github.event.inputs.url }}" ${{ github.event.inputs.compress }} ${{ github.event.inputs.archive }}

    - name: Prepare release notes
      id: notes
      run: |
        NOTES="Downloaded files:\n"
        for file in files/*; do
          if [ -f "$file" ] && [ "$(basename "$file")" != "download.py" ] && [ "$(basename "$file")" != "url.txt" ]; then
            filename=$(basename "$file")
            NOTES="$NOTES- https://github.com/${{ github.repository }}/releases/download/latest/$filename\n"
          fi
        done
        echo "notes<<EOF" >> $GITHUB_OUTPUT
        echo "$NOTES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create or update latest release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release delete latest --yes || true
        git push origin :latest || true
        FILES=$(ls files/* | grep -v -e download.py -e url.txt -e url.txt -e readme.md)
        gh release create latest $FILES --title "Latest Downloads" --notes "${{ steps.notes.outputs.notes }}"
