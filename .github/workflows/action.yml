name: Download Workflow

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'URL, magnet, torrent link, or .txt file URL to download'
        required: true
      compress:
        description: 'Compress applicable files (e.g., videos to 480p, images, audio)'
        type: boolean
        default: false
      archive:
        description: 'Archive each file individually with maximum compression'
        type: boolean
        default: false

jobs:
  download:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install system dependencies
      run: |
        sudo apt-get update || { echo "Failed to update package lists"; exit 1; }
        sudo apt-get install -y wget curl aria2 ffmpeg p7zip-full chromium-chromedriver || { echo "Failed to install system dependencies"; exit 1; }
      continue-on-error: false

    - name: Install Python dependencies
      run: |
        pip install --no-cache-dir selenium requests pillow beautifulsoup4 python-magic || { echo "Failed to install Python dependencies"; exit 1; }
      continue-on-error: false

    - name: Run download script
      run: |
        echo "Running download.py with URL: ${{ github.event.inputs.url }}"
        python download.py "${{ github.event.inputs.url }}" ${{ github.event.inputs.compress }} ${{ github.event.inputs.archive }} 2> download_error.log || {
          echo "Error: download.py failed. Check logs for details."
          cat download_error.log
          exit 1
        }
      continue-on-error: false

    - name: Upload ReVanced Applications
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        release_name: "${{ github.run_id }}"
        tag: "latest"
        file: files/*
        overwrite: true
        file_glob: true
        prerelease: false

    - name: Cleanup on failure
      if: failure()
      run: |
        echo "Workflow failed, cleaning up temporary files..."
        rm -rf files/* 2>/dev/null || true
        rm -f download_error.log 2>/dev/null || true
